{"ast":null,"code":"var _jsxFileName = \"/Users/adamash/Documents/tinder-for-sandwiches/frontend/src/components/NewWich.js\";\nimport React, { useState } from 'react';\nimport { Card, Button, Accordion, Form } from 'react-bootstrap';\nexport default (() => {\n  const [mainsText, setMainsText] = useState(\"\");\n  const [condimentsText, setCondimentsText] = useState(\"\");\n  const [breadText, setBreadText] = useState(\"\");\n\n  const submitClicked = () => {\n    const body = JSON.stringify({\n      mains: mainsText.split(/\\r?\\n/),\n      condiments: condimentsText.split(/\\r?\\n/),\n      bread: breadText\n    });\n    const headers = {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    };\n    fetch('/addwich', {\n      method: \"PUT\",\n      body: body,\n      headers: headers\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    bg: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Button,\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Add a sandwich\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"mains\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Sandwich Mains (eg turkey, swiss cheese, peanut butter):\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"4\",\n    placeholder: \"Please enter each main on a new line without punctuation\",\n    onChange: event => setMainsText(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"extras\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Sandwich Extras/Condiments (eg pickles, mustard, sauce):\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"4\",\n    placeholder: \"Please enter each condiment on a new line without punctuation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"bread\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Bread\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"What kind of bread is your sandwich on?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: submitClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Submit\"))))));\n});","map":{"version":3,"sources":["/Users/adamash/Documents/tinder-for-sandwiches/frontend/src/components/NewWich.js"],"names":["React","useState","Card","Button","Accordion","Form","mainsText","setMainsText","condimentsText","setCondimentsText","breadText","setBreadText","submitClicked","body","JSON","stringify","mains","split","condiments","bread","headers","fetch","method","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Card, Button, Accordion, Form } from 'react-bootstrap';\n\n\n\nexport default () => {\n\n  const [mainsText, setMainsText] = useState(\"\")\n  const [condimentsText, setCondimentsText] = useState(\"\")\n  const [breadText, setBreadText] = useState(\"\")\n\n  const submitClicked = () => {\n    const body = JSON.stringify({\n      mains: mainsText.split(/\\r?\\n/),\n      condiments: condimentsText.split(/\\r?\\n/),\n      bread: breadText,\n    })\n    const headers = { \"Content-type\": \"application/json; charset=UTF-8\" }\n\n    fetch('/addwich', { method: \"PUT\", body: body, headers: headers })\n  }\n\n  return (\n    <Accordion>\n      <Card bg=\"secondary\" >\n        <Card.Header>\n          <Accordion.Toggle as={Button} eventKey=\"0\">\n            Add a sandwich\n          </Accordion.Toggle>\n        </Card.Header>\n        <Accordion.Collapse eventKey=\"0\">\n          <Card.Body>\n            <Form>\n              <Form.Group controlId=\"mains\">\n                <Form.Label>Sandwich Mains (eg turkey, swiss cheese, peanut butter):</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"4\"\n                  placeholder=\"Please enter each main on a new line without punctuation\"\n                  onChange={(event) => setMainsText(event.target.value)}>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"extras\">\n                <Form.Label>Sandwich Extras/Condiments (eg pickles, mustard, sauce):</Form.Label>\n                <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Please enter each condiment on a new line without punctuation\"></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"bread\">\n                <Form.Label>Bread</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"What kind of bread is your sandwich on?\" />\n              </Form.Group>\n              <Button onClick={submitClicked}>Submit</Button>\n            </Form>\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </Accordion>\n  )\n}"]},"metadata":{},"sourceType":"module"}